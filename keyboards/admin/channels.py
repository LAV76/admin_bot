from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict, Any, Optional

def get_channels_management_keyboard(channels: Optional[List[Dict[str, Any]]] = None) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏
    
    Args:
        channels: –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏
    """
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if channels:
        for channel in channels:
            channel_id = channel["id"]
            title = channel["title"]
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –∫–∞–Ω–∞–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            default_mark = " ‚úÖ" if channel["is_default"] else ""
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            username_info = ""
            if channel.get("username"):
                username_info = f" (@{channel['username']})"
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            button_text = f"{title}{default_mark}{username_info}"
            
            buttons.append([
                InlineKeyboardButton(
                    text=button_text,
                    callback_data=f"channel_{channel_id}"
                )
            ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    buttons.append([
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="add_channel")
    ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
    buttons.append([
        InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="refresh_channels_list")
    ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    buttons.append([
        InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_channel_actions_keyboard(channel_id: int, is_default: bool = False) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–∞–Ω–∞–ª–æ–º
    
    Args:
        channel_id: ID –∫–∞–Ω–∞–ª–∞
        is_default: –§–ª–∞–≥ –∫–∞–Ω–∞–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∫–∞–Ω–∞–ª–∞
    """
    buttons = []
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–Ω–∞–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
    if not is_default:
        buttons.append([
            InlineKeyboardButton(
                text="‚úì –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
                callback_data=f"set_default_{channel_id}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
    buttons.append([
        InlineKeyboardButton(
            text="üóë –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª",
            callback_data=f"delete_channel_{channel_id}"
        )
    ])
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∫–∞–Ω–∞–ª–æ–≤
    buttons.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="back_to_channels")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_confirm_delete_channel_keyboard(channel_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
    
    Args:
        channel_id: ID –∫–∞–Ω–∞–ª–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å",
                callback_data=f"confirm_delete_{channel_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data=f"channel_{channel_id}"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_back_to_channels_keyboard(show_continue: bool = False) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∫–∞–Ω–∞–ª–æ–≤
    
    Args:
        show_continue: –§–ª–∞–≥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
    """
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if show_continue:
        buttons.append([
            InlineKeyboardButton(text="‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="continue")
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∫–∞–Ω–∞–ª–æ–≤
    buttons.append([
        InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="back_to_channels")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons) 