from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict

def get_role_selection_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–æ–ª—è–º–∏
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
    """
    keyboard = [
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å", callback_data="add_user_role")],
        [InlineKeyboardButton(text="‚ûñ –£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å", callback_data="remove_user_role")],
        [InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏", callback_data="list_roles")],
        [InlineKeyboardButton(text="üîÑ –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π", callback_data="role_history")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_back_to_role_selection_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–æ–ª—è–º–∏
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
    """
    keyboard = [
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –¥–µ–π—Å—Ç–≤–∏—è", callback_data="back_to_role_selection")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_role_list_keyboard(roles: List[Dict], action: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π
    
    Args:
        roles: –°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ [{id: int, name: str}, ...]
        action: –î–µ–π—Å—Ç–≤–∏–µ —Å —Ä–æ–ª—å—é (add/remove)
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–æ–ª–µ–π
    """
    keyboard = []
    
    for role in roles:
        keyboard.append([
            InlineKeyboardButton(
                text=role['name'], 
                callback_data=f"{action}_role_{role['id']}"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_role_selection")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_user_roles_keyboard(roles: List[Dict], user_id: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    
    Args:
        roles: –°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ [{id: int, name: str}, ...]
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–æ–ª–µ–π
    """
    keyboard = []
    
    for role in roles:
        keyboard.append([
            InlineKeyboardButton(
                text=f"‚ùå {role['name']}", 
                callback_data=f"remove_user_role_{user_id}_{role['id']}"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_role_selection")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_confirm_action_keyboard(action: str, user_id: str, role_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–æ–ª—å—é
    
    Args:
        action: –î–µ–π—Å—Ç–≤–∏–µ —Å —Ä–æ–ª—å—é (add/remove)
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role_id: ID —Ä–æ–ª–∏
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", 
                callback_data=f"confirm_{action}_role_{user_id}_{role_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", 
                callback_data="back_to_role_selection"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard) 