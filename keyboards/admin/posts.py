from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict, Any

def get_post_management_keyboard(post_id: int = None) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–º–∏
    
    Args:
        post_id: –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π ID –ø–æ—Å—Ç–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç 
                –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º)
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–º–∏
    """
    buttons = [
        [
            InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="create_post")
        ],
        [
            InlineKeyboardButton(text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã", callback_data="my_posts")
        ],
        [
            InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–≥—É", callback_data="search_posts_by_tag")
        ],
        [
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_post_creation_cancel_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    """
    buttons = [
        [InlineKeyboardButton(text="ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å AI", callback_data="generate_post_ai")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_post_creation")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_post_list_keyboard(posts: List[Dict], page: int = 0, per_page: int = 5) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ—Å—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    
    Args:
        posts: –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        per_page: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ—Å—Ç–æ–≤
    """
    buttons = []
    
    # –†–∞—Å—á–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    total_pages = (len(posts) + per_page - 1) // per_page
    start_idx = page * per_page
    end_idx = min(start_idx + per_page, len(posts))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    for i in range(start_idx, end_idx):
        post = posts[i]
        title = post.get("title", "")
        
        buttons.append([
            InlineKeyboardButton(
                text=title,
                callback_data=f"view_post_{post.get('id')}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    nav_buttons = []
    
    if total_pages > 1:
        if page > 0:
            nav_buttons.append(
                InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"post_page_{page-1}")
            )
        
        nav_buttons.append(
            InlineKeyboardButton(text=f"{page+1}/{total_pages}", callback_data="ignore")
        )
        
        if page < total_pages - 1:
            nav_buttons.append(
                InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"post_page_{page+1}")
            )
    
    if nav_buttons:
        buttons.append(nav_buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    buttons.append([
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_post_management")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_post_actions_keyboard(post_id: int, is_published: bool = False) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –ø–æ—Å—Ç–∞
    
    Args:
        post_id: ID –ø–æ—Å—Ç–∞
        is_published: –§–ª–∞–≥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
    """
    buttons = []
    
    if not is_published:
        buttons.append([
            InlineKeyboardButton(
                text="üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", 
                callback_data=f"publish_post_{post_id}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞
    buttons.append([
        InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", 
            callback_data=f"edit_post_{post_id}"
        )
    ])
    
    buttons.append([
        InlineKeyboardButton(
            text="‚ùå –£–¥–∞–ª–∏—Ç—å", 
            callback_data=f"delete_post_{post_id}"
        )
    ])
    
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
            callback_data="my_posts"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_confirm_delete_post_keyboard(post_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞
    
    Args:
        post_id: ID –ø–æ—Å—Ç–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ", 
                callback_data=f"confirm_delete_post_{post_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", 
                callback_data=f"view_post_{post_id}"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_chat_selection_keyboard(chats: List[Dict[str, Any]], show_skip_button: bool = True) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
    
    Args:
        chats: –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤
        show_skip_button: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True)
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞
    """
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —á–∞—Ç–∞
    for chat in chats:
        chat_id = chat.get("id")
        chat_title = chat.get("title", f"–ß–∞—Ç {chat_id}")
        is_default = chat.get("is_default", False)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É –¥–ª—è —á–∞—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        title_text = f"{chat_title} {'(–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)' if is_default else ''}"
        
        buttons.append([
            InlineKeyboardButton(
                text=title_text,
                callback_data=f"select_chat_{chat_id}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ show_skip_button=True
    if show_skip_button:
        buttons.append([
            InlineKeyboardButton(
                text="‚è© –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
                callback_data="skip_chat_selection"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    buttons.append([
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞",
            callback_data="cancel_post_creation"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_save_post_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞
    """
    buttons = [
        [
            InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å—Ç", callback_data="save_post"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_post_creation")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_after_publish_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—É—é –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    """
    buttons = [
        [
            InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç", callback_data="create_post")
        ],
        [
            InlineKeyboardButton(text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã", callback_data="my_posts")
        ],
        [
            InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_skip_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    """
    buttons = [
        [InlineKeyboardButton(text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞", callback_data="cancel_post_creation")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_ai_generation_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ AI
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    buttons = [
        [InlineKeyboardButton(text="‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å", callback_data="use_ai_content")],
        [InlineKeyboardButton(text="üîÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="regenerate_ai")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_ai_generation")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons) 